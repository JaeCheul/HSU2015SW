
dodogee.github.io


Javascript의 장점

1. Javascript의 가장 큰 장점은 배우기가 쉽다라는 것이다. 프로그래밍 언어의 기본적인 틀을 갖추고 있으므로
   프로그래머라면 쉽게 자바스크립트를 배울 수 있다.
2. Javascript의 두번째 장점은 접근성 및 편의성이다. 자주 사용하는 기능들은 한번 개발해 놓으면 다시 사용할 수 있으며,
   이런 브라우저가 설치된 곳에서는 HTML처럼 언제든 볼 수 있고 사용자가 원할 때 자바스크립트는 전체 페이지를 다시 읽어 
   오는 수고를 거칠 필요가 없다.
3. Javascript의 세번째 장점은 속도의 빠름이다. 속도의 빠름은 두번째 장점인 접근성 및 편의성과 연관이 
   있다고 볼 수 있다. 접근성과 편의성이 좋음으로 인해 속도까지 빨라지는 효과를 볼 수 있다.
4. 네번째 장점은 운영체제에 영향을 많이 받지 않는다는 것이다. windows 유닉스 리눅스 등 운영체제에 제약을 받지 않는다.
5. 웹서버에 주는 부담이 적다는 것이다. 자바스크립트의 일차적작업은, 입력해야할 부분이 비어있는지 아니면 부적절한 값이  

   들어가 있는지를 확인하는 작업이다. 이러한 작업을 통하여 사전에 오류가 생기는 것을 방지함으로써 웹서버에 주는 부담을 
   줄일 수가 있다.

Phthon의 장점

1. Python의 가장 큰 장점은 인간이 사고하는 것을 컴퓨터적인 사고를 거쳐서 표현하는 것이 아니라 인간이 생각한 것처럼
   표현한다는 것이다. 이것은 컴퓨터식 사고를 할 필요가 줄어들어 자연스럽게 코딩을 할 수 있다는 장점을 준다.
2. 문법이 쉽다는 것이 2번째 장점이다. 문법이 쉬움으로써 학습하는 속도가 빠르고 1번째 장점과 더불어서 더욱 강력한 
   시너지 효과를 발휘한다.
3. 상호작용을 통해 대부분의 프로그램을 만들 수 있다는 것이다. Python 자체만으로도 대부분의 프로그램을 만들 수 있는거에 
   더하여 부족한 부분은 C언어를 통해 메꿀 수 있는 장점이 있다.
4. 개발속도가 빠르다는 것 또한 Python의 장점 중 하나이다. 사고하는 방식 및 문법이 쉬움으로 인해 자연스럽게 따라오는 것 
   처럼 보이지만 속도가 빠르다는 것은 그 자체만으로 장점이 되기 충분한 요인이다.
5. Python은 간결해 보인다. 처음에는 이것을 장점으로 보지 못하였다. 과제를 하면서 띄어쓰기라든가 대소문자 등 사소한 것
   에서 에러가 나는 것을 보며 왜 이렇게 불편하게 만들었나 생각을 했었다. 하지만 계속 과제를 해가며 전체적인 코딩구조가
   깔끔해진다는 것을 볼 수 있었고 다른사람들의 코딩들이 한 눈에 들어온다는 것을 발견 할 수 있었다. 이것은 다른사람이 
   나와 코딩하는 스타일이 달라도 쉽게 작업을 같이 할 수 있고 이것은 공동으로 작업을 할 때 강력한 힘을 발휘한다.

Ruby의 장점

1. Ruby의 가장 큰 장점은 여러 우수한 언어의 장점을 흡수한 점이라고 생각합니다.  Ruby는 객체지향이라는 개념을 처음 구현 

  한 Smalltalk의 장점을 그대로 물려받은 것 뿐만아니라 함수형 언어의 특징이 강한 Lisp, 텍스트 처리에 유용한 Perl등 여   

러가지 언어들의 장점을 잘 섞어 놓은 혼합물이라는 것이 가장 큰 장점이다.
2. Ruby가 순수 객체지향언어이기 때문에 Ruby안에 있는 모든 데이터 또한 모두 객체이다. 이러한 데이터 타입의 일관성은
   동적 타이핑과 맞물려 코드를 매우 깔끔하게 만들어 주는 것이 또 다른 장점이다.
3. Ruby의 또 다른 장점은 배우기 쉽고 활용성이 뛰어나다는 것이다. Ruby의 고급기술들을 배우지 못하더라도 활용성이 매우   

 뛰어나기 때문에 프로그램을 구현하는 데 큰 문제가 없는 것이 장점이다.
4. 루비는 범용 프로그래밍 언어라는 것이 또 다른 장점이다. PHP같은 언어는 객체지향적이지 않기 때문에 대규모 프로젝트를
   하는 데 있어서 제약이 있는 반면 Ruby의 경우 대규모 프로젝트에 유용하게 사용된다.
5. Ruby의 가장 큰 장점이라고 생각하는 것은 메타프로그래밍이라고 생각한다. 간단히 설명하면 기계적이고 반복적인 코딩을 
   생략하는 것으로 C의 매크로 전처리나 C++의 컴파일 타임 템플릿 메타프로그래밍과 대조적으로 메타프로그래밍 코드 자체가 

   루비로 작성되며 컴파일 타임이 아닌 런타임에 프로그램 코드가 생성된다는 특징이 있다.

PHP의 장점
1. PHP의 장점은 html과 쉽게 상호작용이 가능하다는 것이다. 이것이 좋은 이유는 자바스크립트와 비교하자면 자바스크립트로  

   는 실행할 수 없는 정적인 문서를 표현할 수 있다.
2. 대부분의 운영체제에서 돌아간다는 것도 장점 중 하나다. 자바스크립트와 마찬가지로 운영체제에 영향을 받지 않음으로써
   유연한 구조를 보여준다.
3. PHP의 또 다른 장점으로는 오픈소스를 기반으로 하기 때문에 참고 할 수 있는 자료가 많다는 것이다. 
4. 네번째 장점으로는 빠른 생산성과 유지비용을 들 수 있다. PHP는 프로그래밍 속도를 높여주기에 매우 적합한 형태이고 
   또한 ASP나 닷넷과 달리 무료라이선스가 가능한 리눅스에 또 데이터베이스로 Mysql이 설치되는 경우가 많아 유지비용에서
   많은 이점을 보고 있습니다.
5. 마지막으로 PHP의 장점은 유연성과 편리성을 들 수 있습니다. 유연하다는 것은 MySQL, 자바스크립트, CSS 등 여러 언어와
   상호연동이 매우 뛰어나고 특히 MySQL과 호환될 때 속도가 빠른 것을 확인 할 수 있습니다. 
