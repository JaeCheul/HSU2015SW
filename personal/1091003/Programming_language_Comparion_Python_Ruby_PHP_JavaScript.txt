rlaendud1001.github.io


1.PYTHON

	 1) python 은 문법이 쉽다. 예를들어 자바에선 int[] a=[1,2,3]; 
	    for(int i=0;i<4;i++){if(a[i] == 3) System.out.print("3이있다")}
	    라는 식으로 해야한다면 python 은if 3 in [1,2,3]: print ("3이 있다")
	    이런식으로 가능하다.
	
	 2) 중괄호와같은 단락을 나누는 문자들이 사용되지
	    않는다.

	 3) python은 개발속도가 빠르다. 때문에 유행처럼 퍼진 말도 있다.
	    "Life is too short, You need python!"

	 4) 줄을 맞추지 않으면 실행이 되지 않는다.
	    이러한 행위는 가독성에 큰 도움을 준다.

	 5) 동적타이핑. 객체의 멤버에 대한 접근이 제한되어 있지 않다.
	    모듈,클래스,객체와 같은 언어의 요소가 내부에서 접근 할 수
	    있다.


2.PHP

	1) php는 메소드들을 간단히 하여 프로그래밍 속도를 높이기에 좋다.
	   예를들면 Request("asdf") 라는 것을 $asdf라고 표현한다. 

	2) 객체를 지향하는 기능도 추가되어 복잡한 프로그래밍도 가능하다.

	3) php는 c언어를 기반으로 만들어진 서버에서 실행되는 스크립트
	   언어이다. 덕분에 기존의 c언어에 익숙한 개발자들이 보다 쉽게
	   접근 할 수 있다.

	4) 코드작성이 쉽고 문법이 간단하다. 스크립트 언어이기 때문에
	   HTML 문서 내부에 입력하여 실행 할 수 있다.

	5) 편리하게 데이터베이스 연동을 구현 할 수 있다.


3.JAVA SCRIPT
	
	1) HTML 만으로는 사용자와 상호작용을 원활하게 하는 웹페이지를
	   구현하기가 힘들다. 그래서 보통 HTML코드에 추가하여 끼워 
	   넣는다.

	2) 클라이언트 단에서 다양한 작업을 동적으로 수행 할 수 있도록
	   지원한다. ex)웹페이지에 나타난 텍스트를 동적으로 변형하거나
	   새로운 이미지나 텍스트들을 추가 삭제하는 작업 등을 수행 할 수
	   있다.

	3) java나 c#같은 언어에 비해 진입장벽이 낮다.다른 언어와 달리
	   컴파일이 필요하지 않은 스크립트 언어이다. 텍스트 에디터만
	   있으면 코드 작성 후 웹 브라우저를 통해 결과를 확인 할 수 있다.

	4) 운영체제(리눅스,유닉스,윈도우 등)에 관계없이 잘 작동한다.

	5) 명령어의 수가 많지 않고 문법이 쉬운 편에 속한다.ex)var


4.RUBY

	1) 메타 프로그래밍.프로그램 코드를 작성하는 프로그램을 말하는데
	   반복적으로 작성해야 하는 지루한 작업을 아예 자동으로 코드를
	   생성하는 기법으로, 런타임에 프로그램 코드를 동적으로 추가 
	   하는 것을 지원한다.
	
	2) 텍스트 처리에 뛰어나다.perl의 텍스트 처리기능을 계승하여서
	   루비에서의 정규식은 내부적으로는 객체로 구현되었지만, 신택스
	   레벨에서는 perl과 동일한 정규식 literal을 사용 할 수 있다.

	3) 배우기에 매우 쉽다.창시자가 지향한 대로 루비는 신택스가 매우
	   직관적이고 마스터하기 이전에도 활용성이 비교적 뛰어나다.

	4) 순수한 객체지향 언어이다.원시형 데이터 타입을 지원하지 않기
	   때문에 모든 데이터가 곧 객체이고 루비의 동적 타이핑과 어울려서
	   코드를 깔끔하게 만든다.

	5) block. 블록은 배열과 같은 집합 데이터의 원소를 순차적으로 
	   처리하는 작업에 유용하다.
