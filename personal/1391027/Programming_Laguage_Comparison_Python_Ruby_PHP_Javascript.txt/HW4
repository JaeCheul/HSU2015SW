깃허브 페이지 : Leewonkyung.github.io

>> Python
- 배우기에 쉽고 이해하는데 많은 시간을 투자 하지 않아도 된다. 다른 언어에 비해 상대적으로 만드는데 시간이 덜 걸리며, 문법이 간결하다.
- 기존의 프로그래밍 언어와 크게 달라지지 않으면서 코드를 통해 결과를 예측해 볼 수 있다.
- 코드 작성이 완료되면 바로 실행해 볼 수 있다. 이 코드가 어떤 기능을 하는지 알아볼 수 있다.
- 단락을 구분하는 괄호가 다른 코드에 익숙해져 있어서 처음에는 불편했으나 괄호를 없애므로써 가독성이 높아지고 더 보기 쉽게 코드를 작성할 수 있다.
- 함수들이 기존에 봐오던 함수와 같은 이름을 쓰는 경우가 잇어 다른 언어와 비교했을 때 익혀야 할 함수가 많지 않다.
- 객체지향언어의 특성을 가지고 있기 때문에 객체의 멤버에 대한 접근이 제한되어 있지 않다. 

>> Ruby
- 클래스, 변수 등 모든 것이 객체로 이루어져 있어서 더 쉽게 다가온다. 변수 선언시 타입명을 꼭 기입하지 않아도 되고 실행 과정에서 정해지기 때문에 타입때문에 고민할 필요가 없어졌다.
- 익히기 쉬운 언어 구조를 가지고 있어 단계적으로 루비를 배우는데 도움이된다. 
- 객체지향언어의 특징을 가지고 있어서 루비의 데이터에서 직접 메소드를 호출할 수 있는 장점이 있다. 모든 데이터들이 곧 객체이기 때문에 가능한 구조이다.
- 클래스의 정의를 사용자가 직접 변경할 수 있는 개방성을 가지고 있어서 동적 타이핑을 지원한다. 따라서 원래 정의되어있는 메소드를 새롭게 정의하여 사용할 수 있다.
- 루비에서는 상속을 통하지 않아도 다형성을 실현할 수 있다. 
- 블록이라는 기능을 통해 함수를 정의하는 식으로 블록을 정의하여 배열 또는 텍스트의 모든 요소에 메소드의 특성을 적용시킬 수 있다.

>> PHP
- 문법이 어렵지 않아서 쉽게 익혀갈 수 있으며, php가 가지고 있는 메소드들을 통해 필요한 기능을 전달하는데 도움을 준다.
- 자바스크립트나 CSS 등과 상호연동이 가능하여 웹페이지 구성에 있어 동적인 활동을 추가할 수 있다.
- 배열이나 반복문의 구조가 어렵지 않아 간결하게 배열의 요소를 불러서 쓸 수 있으며 길지 않은 코드로 요소들을 자유롭게 부를 수 있다. 또한 배열 연산이 편리하게 구성되어 있다.
- class 구조를 가진 객체 지향성을 가져서 복잡한 프로그래밍도 구현이 가능하고, 효율적인 코딩이 가능하다. 
- 스크립트 언어이기 때문에 HTML 내부에 입력해서 실행할 수 있는 편의성을 가지고 있다. <?PHP ?>외의 부분은 HTML을 사용할 수 있다. 

>> Javascript
- 특별히 변수를 선언하지 않아도 원하는 결과를 얻을 수 있고, 문장이나 단어의 경우 ""안에 써주기만 해도 문자로 바로 인식한다. 또한 정의되어 있는 명령어를 쓰게 되면 코드의 길이도 짧아지는 장점이 있다.
- 기본으로 정의되어 있는 메소드를 이용해 쉽게 원하는 메세지를 띄울 수 있다. 예를 들어, confirm이라는 메소드 안에 문장을 써넣으면 확인하는 창을 띄울 수 있고, prompt 함수를 통해 사용자가 입력가능한 창을 띄울수 있다. 
- 다른 언어에 비해 컴파일의 과정이 없어 쉽게 접근할 수 있고, 문법의 구조나 명령어 등이 쉬운 편이다. 따라서 익히기 쉽고 코드의 반복을 통해 코드가 길어지는 것을 막을 수 있다.
- 기본적인 C언어 구조와 많이 닮아 어렵지 않게 따라갈 수 있고 빨리 배울 수 있으며 응용이 가능하다. 
- 사용자와 상호작용이 가능하여 사용자가 원하는 값을 돌려주거나 에러 메세지 등을 띄울 수 있다. 그렇기 때문에 사용자의 값을 받아들여 동적으로 웹페이지를 구성할 수 있다.
