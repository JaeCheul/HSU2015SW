limjunghoon.github.io

JavaScript

- 자바 스크립트는 따로 데이터형을 선언하지 않는다. var x 라는 변수에 어떠한 값을 넣어도 가능했다. 다른 언어들은
  int, char, String, boolean 등등 따로설정해야하는데 자바 스크립트는 바인딩이 값을 할당한 후 결정된다고한다. 

- 자바를 안다면 매우 배우기 쉬운 언어이다. 자바를 기반으로 한 객체 지향 스크립트 언어로서 자바와 동일한 언어는 아니지만 
자바의 기본적인 문법구조를 그대로 사용하고있다. 

- 인터프리터 언어로서 클래스나 상속 개념이 없는 객체기반언어(Object Based Language)개념을 가지고, 이벤트를 처리할 수 있다.

- 변수 타입의 규정이 프리하다. 따라서 함수 인자를 정의나 리턴을 정의할 때 타입을 지정할 필요가 없다.

- 다양한 방법의 출력이 가능하다. 출력을 여러 함수들이 지원해서 원하는 방식의 출력이 다른 언어보다 쉬운 것 같다.


python

- 세미콜론과 중괄호의 생략이 가능하다. 기본적으로 배웠던 c나 java 등등 몇가지 언어는 세미콜론으로 끝을 알리며 중괄호의
쓰임새가 많았었는데 파이썬에서는 그렇지 않아서 매우 편리했다.

- 들여쓰기가 강제적이다. 다른 언어는 사람에따라 코딩 생김새가 천차만별인데비해 파이썬은 들여쓰기가 강제적이라 
누구나가 작성해도 비슷비슷한 생김새를 보여 공동 작업에서 매우 큰 역할을 할 것 같다.

- 문법이 간단하다. 여태껏 배운 언어도 문법이 쉬운편인데 파이썬은 정말 쉽다. 비전공자라도 직관적으로 알아보기 쉬울것같다.

- 자바와 달리 클래스나 메인함수를 선언하지 않아도 된다. 자바는 코딩한번 작성하려면 public static void main (String[] args) { ... }
  과 클래스들 때문에 강제적으로 줄이 길어지는데 비해 매우 간결하다. 간단한 코딩은 정말 몇줄안에 끝난다.

- str 타입으로 볼때 작은따옴표나 큰따옴표나 차이가 없었다. 다른 언어에선 char 형이나 String형을 작은따옴표 큰 따옴표 사용이 달라
  했갈리기도 했는데 파이썬은 그렇지않아서 편하다.


ruby

- 파이썬과 마찬가지로 문장의 끝에 세미콜론이 필요없으며 객체 지향 언어로써 모든것이 객체이다.
  클래스 , 변수 등등 모든것이 객체라서 객체를 다루는 방법이 매우 직관적이다.

- end라는 키워드가 있어서 다른 언어보다 함수의 끝을 알기 편했다. 이역시 루비가 직관적인것에 한몫하는것같다.

- 루비는 심각하지 않은 경우에 괄호 생략이 가능하다. 같은 세미콜론이 생략되는 파이썬언어 에서도 괄호는 생략이 안되는데 
  루비에선 생략이 되기 때문에 좀더 간편하고 매끄러운 코딩이 가능하다.

- 간결성과 생산성이 강조된 언어이다. 또 문자열 처리에 굉장히 특화되어 있다. 때문에 어떠한 언어보다도
  익숙해지면 개발 속도가 빠르다고 한다.

- 루비 역시 변수의 타입을 따로 지정해주지 않아도 런타임 과정에서 알맞게 인식한다. 좀더 알아본 바로는
  이것이 c,c++등과 다른 스크립트 언어의 장점이라고 한다.


php 

- 근본적으로 PHP의 문법은 C언어를 따르고 있어서 C언어를 안다면 배우기 편리하다.

- 역시 스크립트 언어이므로 변수의 타입을 따로 지정해줄 필요가 없다. 여기선 $이라는 키워드를 사용해서 변수명을 지정하면
   알아서 변수의 타입을 인식한다. 

- c나 자바에선 여러 Include를 사용해야했던 작업들이 그냥 있다. 그냥 적어놓기만 하면 있기때문에 
  작성해야 하는 코드의 줄이 훨씬 간결해져서 가독성이 좋아진다.

- php는 웹 프로그래밍에 필요한 유용한 함수들을 많이 제공한다. 배우는 과정에서 작성해본 함수들 이외에도
  엄청나게 방대한 양의 함수를 제공한다고 한다. 이런 함수들의 제공은 개발자의 입장에서 가장 큰 장점이 아닐까 싶다.

- php는 함수 이름에서 대소문자를 구분하지 않는다. 우연히 대문자 소문자 구분없이 작성해본 코드가
  돌아가서 좀더 찾아보니 함수이름에 대소문자를 구분하지 않는다고 한다.

-